#pragma checksum "C:\projek-KABAYAN\web.net\CoffeShop\Views\User\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0391b6e86befda636c36efccabf74909c98d012a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Index), @"mvc.1.0.view", @"/Views/User/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\projek-KABAYAN\web.net\CoffeShop\Views\_ViewImports.cshtml"
using CoffeShop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\projek-KABAYAN\web.net\CoffeShop\Views\_ViewImports.cshtml"
using CoffeShop.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0391b6e86befda636c36efccabf74909c98d012a", @"/Views/User/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7ed2208080f960c2c9f610815cf672d175db3928", @"/Views/_ViewImports.cshtml")]
    public class Views_User_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\projek-KABAYAN\web.net\CoffeShop\Views\User\Index.cshtml"
  
    ViewData["title"] = "Kelola User";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
.switch {
  position: relative;
  display: inline-block;
  width: 40px;
  height: 22px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: """";
  height: 16px;
  width: 16px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  transform: translateX(18px);
}

.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
</style>


<div class=""content-wrapper"">
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""col-lg-12"">
                <div class=""card"">
                    <div class=""card-header"">
    ");
            WriteLiteral(@"                    <h3>Kelola Data User</h3>
                    </div>
                    <div class=""card-body"">
                        <div class=""table-responsive"">
                            <div id=""tableUser""></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class=""modal fade"" id=""detailModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""detailModalLabel"" aria-hidden=""true"">
  <div class=""modal-dialog modal-lg"" role=""document"">
    <div class=""modal-content"">
      
    </div>
  </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function() {
            $(""#tableUser"").dxDataGrid({
                dataSource: {
                    store: {
                        type: ""odata"",
                        version: 4,
                        url: ""/odata/ApiUser"",
                        key: ""Id""
                    }
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 50],
                    showInfo: true
                },
                filterRow: {
                    visible: true
                },
                searchPanel: {
                    visible: true,
                    width: 240,
                    placeholder: ""Cari...""  
                },
                columns: [
                    {
                        dataField: ""Id"",
                        visible: false,
                        sor");
                WriteLiteral(@"tOrder: ""desc"", 
                        sortIndex: 0       
                    },
                    {
                        caption: ""No"",
                        cellTemplate: function (container, options) {
                            container.text(options.rowIndex + 1);
                        },
                        width: 50
                    },
                    { 
                        dataField: ""Nama"", 
                        caption: ""Nama"" 
                    },
                    { 
                        dataField: ""Email"", 
                        caption: ""Email"" 
                    },
                    {
                        dataField: ""TglLahir"", 
                        caption: ""Tanggal Lahir"" 
                    },
                    {
                        dataField: ""Role"", 
                        caption: ""Role"" 
                    },
                    {
                        caption: ""Nonaktif"",
                        cel");
                WriteLiteral(@"lTemplate: function (container, options) {
                            const id = options.data.Id;
                            const status = options.data.IsDelete;

                            if(status == 1) {
                                container.append(`<label class=""switch""><input class=""slider-delete"" checked data-id=""${id}"" type=""checkbox""><span class=""slider round""></span></label>`);
                            } else {
                                container.append(`<label class=""switch""><input class=""slider-delete"" data-id=""${id}"" type=""checkbox""><span class=""slider round""></span></label>`);
                            }
                        },
                        width: 80 
                    },
                    {
                        caption: ""Aksi"",
                        cellTemplate: function (container, options) {
                            const id = options.data.Id;
                            const div = $(""<div>"");
                                div.");
                WriteLiteral(@"append(`<button class=""btn btn-sm btn-success mr-1"" onclick=""openDetailModal(${id})"">Detail</button>`);
                            container.append(div);
                        },
                        width: 170
                    }
                ] 
            });
        });

        let nilai = 0;

        $(document).on(""change"", "".slider-delete"", function () {
            const checkbox = $(this);
            const id = checkbox.data(""id"");

            const oldChecked = !checkbox.is("":checked""); 
            const newChecked = checkbox.is("":checked"");

            console.log(""ID:"", id);
            console.log(""Old Checked:"", oldChecked);
            console.log(""New Status:"", newChecked ? ""Nonaktif"" : ""Aktif"");

            checkbox.prop(""disabled"", true);

            $.ajax({
                url: '/User/Delete/' + id,
                type: 'GET',
                data: { status: newChecked },
                success: function (response) {
                    aler");
                WriteLiteral(@"t(response.pesan || ""Berhasil"");
                    checkbox.prop(""disabled"", false);
                },
                error: function () {
                    alert(""Gagal menyimpan perubahan"");

                    checkbox.prop(""checked"", oldChecked);
                    checkbox.prop(""disabled"", false);
                }
            });
        });
        
        function openDetailModal(id) {
            $('#detailModal .modal-content').html(`
                <div class=""modal-header"">
                    <h5 class=""modal-title"">Detail User</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Tutup"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <p>Memuat...</p>
                </div>
            `);

            // Load data dari partial view
            $.get(`/User/Detail/${id}`, function (html) {
  ");
                WriteLiteral("              $(\'#detailModal .modal-content\').html(html);\r\n            });\r\n\r\n            $(\'#detailModal\').modal(\'show\');\r\n        }\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
